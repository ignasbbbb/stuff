
--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k=="script" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting"))
Model0 = Instance.new("Model")
Part1 = Instance.new("Part")
SpecialMesh2 = Instance.new("SpecialMesh")
Decal3 = Instance.new("Decal")
Part4 = Instance.new("Part")
Decal5 = Instance.new("Decal")
Motor6D6 = Instance.new("Motor6D")
Motor6D7 = Instance.new("Motor6D")
Motor6D8 = Instance.new("Motor6D")
Motor6D9 = Instance.new("Motor6D")
Motor6D10 = Instance.new("Motor6D")
Part11 = Instance.new("Part")
Part12 = Instance.new("Part")
Part13 = Instance.new("Part")
Part14 = Instance.new("Part")
Humanoid15 = Instance.new("Humanoid")
Part16 = Instance.new("Part")
Motor6D17 = Instance.new("Motor6D")
LocalScript18 = Instance.new("Script")
StringValue19 = Instance.new("StringValue")
Animation20 = Instance.new("Animation")
NumberValue21 = Instance.new("NumberValue")
Animation22 = Instance.new("Animation")
NumberValue23 = Instance.new("NumberValue")
StringValue24 = Instance.new("StringValue")
Animation25 = Instance.new("Animation")
StringValue26 = Instance.new("StringValue")
Animation27 = Instance.new("Animation")
StringValue28 = Instance.new("StringValue")
Animation29 = Instance.new("Animation")
StringValue30 = Instance.new("StringValue")
Animation31 = Instance.new("Animation")
StringValue32 = Instance.new("StringValue")
Animation33 = Instance.new("Animation")
StringValue34 = Instance.new("StringValue")
Animation35 = Instance.new("Animation")
StringValue36 = Instance.new("StringValue")
Animation37 = Instance.new("Animation")
BindableFunction38 = Instance.new("BindableFunction")
NumberValue39 = Instance.new("NumberValue")
BodyColors40 = Instance.new("BodyColors")
Model0.Name = "Test Dummy"
Model0.Parent = mas
Model0.PrimaryPart = Part1
Part1.Name = "Head"
Part1.Parent = Model0
Part1.CFrame = CFrame.new(14.5, 4.5, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part1.Orientation = Vector3.new(0, 90, 0)
Part1.Position = Vector3.new(14.5, 4.5, 23.999998092651367)
Part1.Rotation = Vector3.new(0, 90, 0)
Part1.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part1.Size = Vector3.new(2, 1, 1)
Part1.BrickColor = BrickColor.new("Bright yellow")
Part1.TopSurface = Enum.SurfaceType.Smooth
Part1.brickColor = BrickColor.new("Bright yellow")
Part1.FormFactor = Enum.FormFactor.Symmetric
Part1.formFactor = Enum.FormFactor.Symmetric
SpecialMesh2.Parent = Part1
SpecialMesh2.Scale = Vector3.new(1.25, 1.25, 1.25)
Decal3.Name = "face"
Decal3.Parent = Part1
Decal3.Texture = "rbxasset://textures/face.png"
Part4.Name = "Torso"
Part4.Parent = Model0
Part4.CFrame = CFrame.new(14.5, 3, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part4.Orientation = Vector3.new(0, 90, 0)
Part4.Position = Vector3.new(14.5, 3, 23.999998092651367)
Part4.Rotation = Vector3.new(0, 90, 0)
Part4.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part4.Size = Vector3.new(2, 2, 1)
Part4.BrickColor = BrickColor.new("Bright blue")
Part4.LeftParamA = 0
Part4.LeftParamB = 0
Part4.LeftSurface = Enum.SurfaceType.Weld
Part4.RightParamA = 0
Part4.RightParamB = 0
Part4.RightSurface = Enum.SurfaceType.Weld
Part4.brickColor = BrickColor.new("Bright blue")
Part4.FormFactor = Enum.FormFactor.Symmetric
Part4.formFactor = Enum.FormFactor.Symmetric
Decal5.Name = "roblox"
Decal5.Parent = Part4
Motor6D6.Name = "Right Shoulder"
Motor6D6.Parent = Part4
Motor6D6.MaxVelocity = 0.10000000149011612
Motor6D6.C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D6.C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D6.Part0 = Part4
Motor6D6.Part1 = Part12
Motor6D6.part1 = Part12
Motor6D7.Name = "Left Shoulder"
Motor6D7.Parent = Part4
Motor6D7.MaxVelocity = 0.10000000149011612
Motor6D7.C0 = CFrame.new(-1, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D7.C1 = CFrame.new(0.5, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D7.Part0 = Part4
Motor6D7.Part1 = Part11
Motor6D7.part1 = Part11
Motor6D8.Name = "Right Hip"
Motor6D8.Parent = Part4
Motor6D8.MaxVelocity = 0.10000000149011612
Motor6D8.C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D8.C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D8.Part0 = Part4
Motor6D8.Part1 = Part14
Motor6D8.part1 = Part14
Motor6D9.Name = "Left Hip"
Motor6D9.Parent = Part4
Motor6D9.MaxVelocity = 0.10000000149011612
Motor6D9.C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D9.C1 = CFrame.new(-0.5, 1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D9.Part0 = Part4
Motor6D9.Part1 = Part13
Motor6D9.part1 = Part13
Motor6D10.Name = "Neck"
Motor6D10.Parent = Part4
Motor6D10.MaxVelocity = 0.10000000149011612
Motor6D10.C0 = CFrame.new(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D10.C1 = CFrame.new(0, -0.5, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D10.Part0 = Part4
Motor6D10.Part1 = Part1
Motor6D10.part1 = Part1
Part11.Name = "Left Arm"
Part11.Parent = Model0
Part11.CFrame = CFrame.new(14.5, 3, 25.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part11.Orientation = Vector3.new(0, 90, 0)
Part11.Position = Vector3.new(14.5, 3, 25.499998092651367)
Part11.Rotation = Vector3.new(0, 90, 0)
Part11.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part11.Size = Vector3.new(1, 2, 1)
Part11.BrickColor = BrickColor.new("Bright yellow")
Part11.CanCollide = false
Part11.brickColor = BrickColor.new("Bright yellow")
Part11.FormFactor = Enum.FormFactor.Symmetric
Part11.formFactor = Enum.FormFactor.Symmetric
Part12.Name = "Right Arm"
Part12.Parent = Model0
Part12.CFrame = CFrame.new(14.5, 3, 22.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part12.Orientation = Vector3.new(0, 90, 0)
Part12.Position = Vector3.new(14.5, 3, 22.499998092651367)
Part12.Rotation = Vector3.new(0, 90, 0)
Part12.Color = Color3.new(0.960784, 0.803922, 0.188235)
Part12.Size = Vector3.new(1, 2, 1)
Part12.BrickColor = BrickColor.new("Bright yellow")
Part12.CanCollide = false
Part12.brickColor = BrickColor.new("Bright yellow")
Part12.FormFactor = Enum.FormFactor.Symmetric
Part12.formFactor = Enum.FormFactor.Symmetric
Part13.Name = "Left Leg"
Part13.Parent = Model0
Part13.CFrame = CFrame.new(14.5, 1, 24.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part13.Orientation = Vector3.new(0, 90, 0)
Part13.Position = Vector3.new(14.5, 1, 24.499998092651367)
Part13.Rotation = Vector3.new(0, 90, 0)
Part13.Color = Color3.new(0.294118, 0.592157, 0.294118)
Part13.Size = Vector3.new(1, 2, 1)
Part13.BottomSurface = Enum.SurfaceType.Smooth
Part13.BrickColor = BrickColor.new("Bright green")
Part13.CanCollide = false
Part13.brickColor = BrickColor.new("Bright green")
Part13.FormFactor = Enum.FormFactor.Symmetric
Part13.formFactor = Enum.FormFactor.Symmetric
Part14.Name = "Right Leg"
Part14.Parent = Model0
Part14.CFrame = CFrame.new(14.5, 1, 23.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part14.Orientation = Vector3.new(0, 90, 0)
Part14.Position = Vector3.new(14.5, 1, 23.499998092651367)
Part14.Rotation = Vector3.new(0, 90, 0)
Part14.Color = Color3.new(0.294118, 0.592157, 0.294118)
Part14.Size = Vector3.new(1, 2, 1)
Part14.BottomSurface = Enum.SurfaceType.Smooth
Part14.BrickColor = BrickColor.new("Bright green")
Part14.CanCollide = false
Part14.brickColor = BrickColor.new("Bright green")
Part14.FormFactor = Enum.FormFactor.Symmetric
Part14.formFactor = Enum.FormFactor.Symmetric
Humanoid15.Parent = Model0
Humanoid15.LeftLeg = Part13
Humanoid15.RightLeg = Part14
Humanoid15.Torso = Part16
Part16.Name = "HumanoidRootPart"
Part16.Parent = Model0
Part16.CFrame = CFrame.new(14.5, 3, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part16.Orientation = Vector3.new(0, 90, 0)
Part16.Position = Vector3.new(14.5, 3, 23.999998092651367)
Part16.Rotation = Vector3.new(0, 90, 0)
Part16.Transparency = 1
Part16.Size = Vector3.new(2, 2, 1)
Part16.BottomSurface = Enum.SurfaceType.Smooth
Part16.CanCollide = false
Part16.LeftParamA = 0
Part16.LeftParamB = 0
Part16.RightParamA = 0
Part16.RightParamB = 0
Part16.TopSurface = Enum.SurfaceType.Smooth
Part16.FormFactor = Enum.FormFactor.Symmetric
Part16.formFactor = Enum.FormFactor.Symmetric
Motor6D17.Name = "RootJoint"
Motor6D17.Parent = Part16
Motor6D17.MaxVelocity = 0.10000000149011612
Motor6D17.C0 = CFrame.new(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D17.C1 = CFrame.new(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D17.Part0 = Part16
Motor6D17.Part1 = Part4
Motor6D17.part1 = Part4
LocalScript18.Name = "Animate"
table.insert(cors,sandbox(LocalScript18,function()
local Figure = script.Parent
local Torso = Figure:WaitForChild("Torso")
local RightShoulder = Torso:WaitForChild("Right Shoulder")
local LeftShoulder = Torso:WaitForChild("Left Shoulder")
local RightHip = Torso:WaitForChild("Right Hip")
local LeftHip = Torso:WaitForChild("Left Hip")
local Neck = Torso:WaitForChild("Neck")
local Humanoid = Figure:WaitForChild("Humanoid")
local pose = "Standing"

local EMOTE_TRANSITION_TIME = 0.1

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)

-- Clear any existing animation tracks
-- Fixes issue with characters that are moved in and out of the Workspace accumulating tracks
local animator = if Humanoid then Humanoid:FindFirstChildOfClass("Animator") else nil
if animator then
	local animTracks = animator:GetPlayingAnimationTracks()
	for i,track in ipairs(animTracks) do
		track:Stop(0)
		track:Destroy()
	end
end


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed > 0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil then
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed > 0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		local desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)



-- emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(emote)
	-- Only play emotes when idling
	if pose ~= "Standing" then
		return
	end
	if emoteNames[emote] ~= nil then
		-- Default emotes
		playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)

		return true, currentAnimTrack
	end

	-- Return false to indicate that the emote could not be played
	return false
end
-- main program

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent ~= nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue19.Name = "idle"
StringValue19.Parent = LocalScript18
Animation20.Name = "Animation1"
Animation20.Parent = StringValue19
Animation20.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue21.Name = "Weight"
NumberValue21.Parent = Animation20
NumberValue21.Value = 9
Animation22.Name = "Animation2"
Animation22.Parent = StringValue19
Animation22.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue23.Name = "Weight"
NumberValue23.Parent = Animation22
NumberValue23.Value = 1
StringValue24.Name = "walk"
StringValue24.Parent = LocalScript18
Animation25.Name = "WalkAnim"
Animation25.Parent = StringValue24
Animation25.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue26.Name = "run"
StringValue26.Parent = LocalScript18
Animation27.Name = "RunAnim"
Animation27.Parent = StringValue26
Animation27.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue28.Name = "jump"
StringValue28.Parent = LocalScript18
Animation29.Name = "JumpAnim"
Animation29.Parent = StringValue28
Animation29.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue30.Name = "climb"
StringValue30.Parent = LocalScript18
Animation31.Name = "ClimbAnim"
Animation31.Parent = StringValue30
Animation31.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue32.Name = "toolnone"
StringValue32.Parent = LocalScript18
Animation33.Name = "ToolNoneAnim"
Animation33.Parent = StringValue32
Animation33.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue34.Name = "fall"
StringValue34.Parent = LocalScript18
Animation35.Name = "FallAnim"
Animation35.Parent = StringValue34
Animation35.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue36.Name = "sit"
StringValue36.Parent = LocalScript18
Animation37.Name = "SitAnim"
Animation37.Parent = StringValue36
Animation37.AnimationId = "http://www.roblox.com/asset/?id=178130996"
BindableFunction38.Name = "PlayEmote"
BindableFunction38.Parent = LocalScript18
NumberValue39.Name = "ScaleDampeningPercent"
NumberValue39.Parent = LocalScript18
NumberValue39.Value = 1
BodyColors40.Parent = Model0
BodyColors40.HeadColor = BrickColor.new("Bright yellow")
BodyColors40.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors40.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors40.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors40.LeftLegColor = BrickColor.new("Bright green")
BodyColors40.LeftLegColor3 = Color3.new(0.294118, 0.592157, 0.294118)
BodyColors40.RightArmColor = BrickColor.new("Bright yellow")
BodyColors40.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors40.RightLegColor = BrickColor.new("Bright green")
BodyColors40.RightLegColor3 = Color3.new(0.294118, 0.592157, 0.294118)
BodyColors40.TorsoColor = BrickColor.new("Bright blue")
BodyColors40.TorsoColor3 = Color3.new(0.0509804, 0.411765, 0.67451)
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end

--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k=="script" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting"))
Model41 = Instance.new("Model")
Part42 = Instance.new("Part")
SpecialMesh43 = Instance.new("SpecialMesh")
Decal44 = Instance.new("Decal")
Part45 = Instance.new("Part")
Decal46 = Instance.new("Decal")
Motor6D47 = Instance.new("Motor6D")
Motor6D48 = Instance.new("Motor6D")
Motor6D49 = Instance.new("Motor6D")
Motor6D50 = Instance.new("Motor6D")
Motor6D51 = Instance.new("Motor6D")
Part52 = Instance.new("Part")
Part53 = Instance.new("Part")
Part54 = Instance.new("Part")
Part55 = Instance.new("Part")
Humanoid56 = Instance.new("Humanoid")
Part57 = Instance.new("Part")
Motor6D58 = Instance.new("Motor6D")
LocalScript59 = Instance.new("LocalScript")
StringValue60 = Instance.new("StringValue")
Animation61 = Instance.new("Animation")
NumberValue62 = Instance.new("NumberValue")
Animation63 = Instance.new("Animation")
NumberValue64 = Instance.new("NumberValue")
StringValue65 = Instance.new("StringValue")
Animation66 = Instance.new("Animation")
StringValue67 = Instance.new("StringValue")
Animation68 = Instance.new("Animation")
StringValue69 = Instance.new("StringValue")
Animation70 = Instance.new("Animation")
StringValue71 = Instance.new("StringValue")
Animation72 = Instance.new("Animation")
StringValue73 = Instance.new("StringValue")
Animation74 = Instance.new("Animation")
StringValue75 = Instance.new("StringValue")
Animation76 = Instance.new("Animation")
StringValue77 = Instance.new("StringValue")
Animation78 = Instance.new("Animation")
BindableFunction79 = Instance.new("BindableFunction")
NumberValue80 = Instance.new("NumberValue")
BodyColors81 = Instance.new("BodyColors")
Model41.Name = "Test Dummy"
Model41.Parent = mas
Model41.PrimaryPart = Part42
Part42.Name = "Head"
Part42.Parent = Model41
Part42.CFrame = CFrame.new(14.5, 4.5, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part42.Orientation = Vector3.new(0, 90, 0)
Part42.Position = Vector3.new(14.5, 4.5, 23.999998092651367)
Part42.Rotation = Vector3.new(0, 90, 0)
Part42.Color = Color3.new(0.992157, 0.917647, 0.552941)
Part42.Size = Vector3.new(2, 1, 1)
Part42.BrickColor = BrickColor.new("Cool yellow")
Part42.TopSurface = Enum.SurfaceType.Smooth
Part42.brickColor = BrickColor.new("Cool yellow")
Part42.FormFactor = Enum.FormFactor.Symmetric
Part42.formFactor = Enum.FormFactor.Symmetric
SpecialMesh43.Parent = Part42
SpecialMesh43.Scale = Vector3.new(1.25, 1.25, 1.25)
Decal44.Name = "face"
Decal44.Parent = Part42
Decal44.Texture = "rbxasset://textures/face.png"
Part45.Name = "Torso"
Part45.Parent = Model41
Part45.CFrame = CFrame.new(14.5, 3, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part45.Orientation = Vector3.new(0, 90, 0)
Part45.Position = Vector3.new(14.5, 3, 23.999998092651367)
Part45.Rotation = Vector3.new(0, 90, 0)
Part45.Color = Color3.new(0.156863, 0.498039, 0.278431)
Part45.Size = Vector3.new(2, 2, 1)
Part45.BrickColor = BrickColor.new("Dark green")
Part45.LeftParamA = 0
Part45.LeftParamB = 0
Part45.LeftSurface = Enum.SurfaceType.Weld
Part45.RightParamA = 0
Part45.RightParamB = 0
Part45.RightSurface = Enum.SurfaceType.Weld
Part45.brickColor = BrickColor.new("Dark green")
Part45.FormFactor = Enum.FormFactor.Symmetric
Part45.formFactor = Enum.FormFactor.Symmetric
Decal46.Name = "roblox"
Decal46.Parent = Part45
Motor6D47.Name = "Right Shoulder"
Motor6D47.Parent = Part45
Motor6D47.MaxVelocity = 0.10000000149011612
Motor6D47.C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D47.C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D47.Part0 = Part45
Motor6D47.Part1 = Part53
Motor6D47.part1 = Part53
Motor6D48.Name = "Left Shoulder"
Motor6D48.Parent = Part45
Motor6D48.MaxVelocity = 0.10000000149011612
Motor6D48.C0 = CFrame.new(-1, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D48.C1 = CFrame.new(0.5, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D48.Part0 = Part45
Motor6D48.Part1 = Part52
Motor6D48.part1 = Part52
Motor6D49.Name = "Right Hip"
Motor6D49.Parent = Part45
Motor6D49.MaxVelocity = 0.10000000149011612
Motor6D49.C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D49.C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
Motor6D49.Part0 = Part45
Motor6D49.Part1 = Part55
Motor6D49.part1 = Part55
Motor6D50.Name = "Left Hip"
Motor6D50.Parent = Part45
Motor6D50.MaxVelocity = 0.10000000149011612
Motor6D50.C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D50.C1 = CFrame.new(-0.5, 1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
Motor6D50.Part0 = Part45
Motor6D50.Part1 = Part54
Motor6D50.part1 = Part54
Motor6D51.Name = "Neck"
Motor6D51.Parent = Part45
Motor6D51.MaxVelocity = 0.10000000149011612
Motor6D51.C0 = CFrame.new(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D51.C1 = CFrame.new(0, -0.5, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D51.Part0 = Part45
Motor6D51.Part1 = Part42
Motor6D51.part1 = Part42
Part52.Name = "Left Arm"
Part52.Parent = Model41
Part52.CFrame = CFrame.new(14.5, 3, 25.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part52.Orientation = Vector3.new(0, 90, 0)
Part52.Position = Vector3.new(14.5, 3, 25.499998092651367)
Part52.Rotation = Vector3.new(0, 90, 0)
Part52.Color = Color3.new(0.992157, 0.917647, 0.552941)
Part52.Size = Vector3.new(1, 2, 1)
Part52.BrickColor = BrickColor.new("Cool yellow")
Part52.CanCollide = false
Part52.brickColor = BrickColor.new("Cool yellow")
Part52.FormFactor = Enum.FormFactor.Symmetric
Part52.formFactor = Enum.FormFactor.Symmetric
Part53.Name = "Right Arm"
Part53.Parent = Model41
Part53.CFrame = CFrame.new(14.5, 3, 22.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part53.Orientation = Vector3.new(0, 90, 0)
Part53.Position = Vector3.new(14.5, 3, 22.499998092651367)
Part53.Rotation = Vector3.new(0, 90, 0)
Part53.Color = Color3.new(0.992157, 0.917647, 0.552941)
Part53.Size = Vector3.new(1, 2, 1)
Part53.BrickColor = BrickColor.new("Cool yellow")
Part53.CanCollide = false
Part53.brickColor = BrickColor.new("Cool yellow")
Part53.FormFactor = Enum.FormFactor.Symmetric
Part53.formFactor = Enum.FormFactor.Symmetric
Part54.Name = "Left Leg"
Part54.Parent = Model41
Part54.CFrame = CFrame.new(14.5, 1, 24.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part54.Orientation = Vector3.new(0, 90, 0)
Part54.Position = Vector3.new(14.5, 1, 24.499998092651367)
Part54.Rotation = Vector3.new(0, 90, 0)
Part54.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part54.Size = Vector3.new(1, 2, 1)
Part54.BottomSurface = Enum.SurfaceType.Smooth
Part54.BrickColor = BrickColor.new("Bright blue")
Part54.CanCollide = false
Part54.brickColor = BrickColor.new("Bright blue")
Part54.FormFactor = Enum.FormFactor.Symmetric
Part54.formFactor = Enum.FormFactor.Symmetric
Part55.Name = "Right Leg"
Part55.Parent = Model41
Part55.CFrame = CFrame.new(14.5, 1, 23.4999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part55.Orientation = Vector3.new(0, 90, 0)
Part55.Position = Vector3.new(14.5, 1, 23.499998092651367)
Part55.Rotation = Vector3.new(0, 90, 0)
Part55.Color = Color3.new(0.0509804, 0.411765, 0.67451)
Part55.Size = Vector3.new(1, 2, 1)
Part55.BottomSurface = Enum.SurfaceType.Smooth
Part55.BrickColor = BrickColor.new("Bright blue")
Part55.CanCollide = false
Part55.brickColor = BrickColor.new("Bright blue")
Part55.FormFactor = Enum.FormFactor.Symmetric
Part55.formFactor = Enum.FormFactor.Symmetric
Humanoid56.Parent = Model41
Humanoid56.LeftLeg = Part54
Humanoid56.RightLeg = Part55
Humanoid56.Torso = Part57
Part57.Name = "HumanoidRootPart"
Part57.Parent = Model41
Part57.CFrame = CFrame.new(14.5, 3, 23.9999981, 0, 0, 1, 0, 1, 0, -1, 0, 0)
Part57.Orientation = Vector3.new(0, 90, 0)
Part57.Position = Vector3.new(14.5, 3, 23.999998092651367)
Part57.Rotation = Vector3.new(0, 90, 0)
Part57.Transparency = 1
Part57.Size = Vector3.new(2, 2, 1)
Part57.BottomSurface = Enum.SurfaceType.Smooth
Part57.CanCollide = false
Part57.LeftParamA = 0
Part57.LeftParamB = 0
Part57.RightParamA = 0
Part57.RightParamB = 0
Part57.TopSurface = Enum.SurfaceType.Smooth
Part57.FormFactor = Enum.FormFactor.Symmetric
Part57.formFactor = Enum.FormFactor.Symmetric
Motor6D58.Name = "RootJoint"
Motor6D58.Parent = Part57
Motor6D58.MaxVelocity = 0.10000000149011612
Motor6D58.C0 = CFrame.new(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D58.C1 = CFrame.new(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
Motor6D58.Part0 = Part57
Motor6D58.Part1 = Part45
Motor6D58.part1 = Part45
LocalScript59.Name = "Animate"
LocalScript59.Parent = Model41
table.insert(cors,sandbox(LocalScript59,function()
local Figure = script.Parent
local Torso = Figure:WaitForChild("Torso")
local RightShoulder = Torso:WaitForChild("Right Shoulder")
local LeftShoulder = Torso:WaitForChild("Left Shoulder")
local RightHip = Torso:WaitForChild("Right Hip")
local LeftHip = Torso:WaitForChild("Left Hip")
local Neck = Torso:WaitForChild("Neck")
local Humanoid = Figure:WaitForChild("Humanoid")
local pose = "Standing"

local EMOTE_TRANSITION_TIME = 0.1

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)

-- Clear any existing animation tracks
-- Fixes issue with characters that are moved in and out of the Workspace accumulating tracks
local animator = if Humanoid then Humanoid:FindFirstChildOfClass("Animator") else nil
if animator then
	local animTracks = animator:GetPlayingAnimationTracks()
	for i,track in ipairs(animTracks) do
		track:Stop(0)
		track:Destroy()
	end
end


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed > 0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil then
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed > 0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		local desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

---- setup emote chat hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)

-- emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(emote)
	-- Only play emotes when idling
	if pose ~= "Standing" then
		return
	end
	if emoteNames[emote] ~= nil then
		-- Default emotes
		playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)

		return true, currentAnimTrack
	end

	-- Return false to indicate that the emote could not be played
	return false
end
-- main program

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent ~= nil do
	local _, time = wait(0.1)
	move(time)
end



end))
StringValue60.Name = "idle"
StringValue60.Parent = LocalScript59
Animation61.Name = "Animation1"
Animation61.Parent = StringValue60
Animation61.AnimationId = "http://www.roblox.com/asset/?id=180435571"
NumberValue62.Name = "Weight"
NumberValue62.Parent = Animation61
NumberValue62.Value = 9
Animation63.Name = "Animation2"
Animation63.Parent = StringValue60
Animation63.AnimationId = "http://www.roblox.com/asset/?id=180435792"
NumberValue64.Name = "Weight"
NumberValue64.Parent = Animation63
NumberValue64.Value = 1
StringValue65.Name = "walk"
StringValue65.Parent = LocalScript59
Animation66.Name = "WalkAnim"
Animation66.Parent = StringValue65
Animation66.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue67.Name = "run"
StringValue67.Parent = LocalScript59
Animation68.Name = "RunAnim"
Animation68.Parent = StringValue67
Animation68.AnimationId = "http://www.roblox.com/asset/?id=180426354"
StringValue69.Name = "jump"
StringValue69.Parent = LocalScript59
Animation70.Name = "JumpAnim"
Animation70.Parent = StringValue69
Animation70.AnimationId = "http://www.roblox.com/asset/?id=125750702"
StringValue71.Name = "climb"
StringValue71.Parent = LocalScript59
Animation72.Name = "ClimbAnim"
Animation72.Parent = StringValue71
Animation72.AnimationId = "http://www.roblox.com/asset/?id=180436334"
StringValue73.Name = "toolnone"
StringValue73.Parent = LocalScript59
Animation74.Name = "ToolNoneAnim"
Animation74.Parent = StringValue73
Animation74.AnimationId = "http://www.roblox.com/asset/?id=182393478"
StringValue75.Name = "fall"
StringValue75.Parent = LocalScript59
Animation76.Name = "FallAnim"
Animation76.Parent = StringValue75
Animation76.AnimationId = "http://www.roblox.com/asset/?id=180436148"
StringValue77.Name = "sit"
StringValue77.Parent = LocalScript59
Animation78.Name = "SitAnim"
Animation78.Parent = StringValue77
Animation78.AnimationId = "http://www.roblox.com/asset/?id=178130996"
BindableFunction79.Name = "PlayEmote"
BindableFunction79.Parent = LocalScript59
NumberValue80.Name = "ScaleDampeningPercent"
NumberValue80.Parent = LocalScript59
NumberValue80.Value = 1
BodyColors81.Parent = Model41
BodyColors81.HeadColor = BrickColor.new("Bright yellow")
BodyColors81.HeadColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors81.LeftArmColor = BrickColor.new("Bright yellow")
BodyColors81.LeftArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors81.LeftLegColor = BrickColor.new("Bright green")
BodyColors81.LeftLegColor3 = Color3.new(0.294118, 0.592157, 0.294118)
BodyColors81.RightArmColor = BrickColor.new("Bright yellow")
BodyColors81.RightArmColor3 = Color3.new(0.960784, 0.803922, 0.188235)
BodyColors81.RightLegColor = BrickColor.new("Bright green")
BodyColors81.RightLegColor3 = Color3.new(0.294118, 0.592157, 0.294118)
BodyColors81.TorsoColor = BrickColor.new("Bright blue")
BodyColors81.TorsoColor3 = Color3.new(0.0509804, 0.411765, 0.67451)
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
